#           \                 _)  |      |       
#          _ \    __ \    __|  |  __ \   |   _ \ 
#         ___ \   |   | \__ \  |  |   |  |   __/ 
#       _/    _\ _|  _| ____/ _| _.__/  _| \___| 


upstream backend_{{ site.name }} {
    ip_hash; 
{% for i in site.backends %}
    server {{ i.host }}; 
{% endfor %}
}

server {
    listen 80;
    listen [::]:80;
    server_name {{ site.name }};
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{ site.name }};

    location / {
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
{% if site.upstream_https is not defined %}
        proxy_pass http://backend_{{ site.name }};
{% elif site.upstream_https %}
        proxy_pass https://backend_{{ site.name }};
{% endif %}
    }

    ssl on;
    ssl_certificate         /etc/nginx/ssl/{{ site.name }}.crt;
    ssl_certificate_key     /etc/nginx/ssl/{{ site.name }}.pem;

    ssl_protocols  TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on; 
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:!ADH:!AECDH:!MD5:!CBC:!SHA1:!AESCCM';
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

{% if site.hsts is defined and site.hsts %}
    add_header Strict-Transport-Security "max-age=63072000;";
{% endif %}
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

}
