---
# Generate cert request and key

- name: "{{ site.name }} :: TLS Certificate Private key "
  openssl_privatekey:
    path: /etc/nginx/ssl/{{ site.name }}.pem
    type: RSA

- name: "{{ site.name }} :: TLS Cert Request"
  openssl_csr:
    path: /etc/nginx/ssl/{{ site.name }}.csr
    privatekey_path: /etc/nginx/ssl/{{ site.name }}.pem
    common_name: "{{ site.name }}"

# ACME Cert Req.
- name: "{{ site.name }} :: ACME Account Key"
  openssl_privatekey:
    path: /etc/nginx/ssl/acme_{{ site.name }}.pem
    type: RSA

- name: "{{ site.name }} :: ACME Cert Request "
  acme_certificate:
    terms_agreed: true
    remaining_days: 35
    challenge: dns-01
    acme_version: 2
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    account_email: "{{ cloudflare.email }}"
    account_key: /etc/nginx/ssl/acme_{{ site.name }}.pem
    csr: /etc/nginx/ssl/{{ site.name }}.csr
    fullchain_dest: /etc/nginx/ssl/{{ site.name }}.crt
  register: acme_dns_challenge

# DNS Challenge
# Create TXT record in CloudFlare with challenge data
- name: "{{ site.name }} :: CloudFlare DNS Challenge"
  cloudflare_dns:
    state: present
    account_api_token: "{{ cloudflare.api_key }}"
    account_email: "{{ cloudflare.email }}"
    zone: "{{ cloudflare.domain }}"
    type: TXT
    record: "{{ item['value']['dns-01']['record'] }}"
    value: "{{ item['value']['dns-01']['resource_value'] }}"
  with_dict: "{{ acme_dns_challenge['challenge_data'] }}"
  when: acme_dns_challenge.changed|bool

- name: Wait for DNS to converge
  wait_for:
    timeout: 30
  when: acme_dns_challenge.changed|bool

# Verify Request
- name: "{{ site.name }} :: Validate ACME request"
  acme_certificate:
    terms_agreed: true
    remaining_days: 35
    acme_version: 2
    challenge: dns-01
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    account_key: /etc/nginx/ssl/acme_{{ site.name }}.pem
    account_email: "{{ cloudflare.email }}"
    csr: /etc/nginx/ssl/{{ site.name }}.csr
    fullchain_dest: /etc/nginx/ssl/{{ site.name }}.crt
    data: "{{ acme_dns_challenge }}"
  when: acme_dns_challenge.changed|bool
  notify: reload_nginx


# Cleanup DNS
- name: "{{ site.name }} :: Remove CloudFlare DNS Challenge"
  cloudflare_dns:
    state: absent
    account_api_token: "{{ cloudflare.api_key }}"
    account_email: "{{ cloudflare.email }}"
    zone: "{{ cloudflare.domain }}"
    type: TXT
    record: "{{ item['value']['dns-01']['record'] }}"
  with_dict: "{{ acme_dns_challenge['challenge_data'] }}"
  when: acme_dns_challenge.changed|bool
